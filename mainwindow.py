# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\User\Desktop\installer deleter\mainwindowchanged.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import glob
import os
import sys
def res(relative_path):
    """ Get absolute path to resource, works for dev and for PyInstaller """
    try:
        # PyInstaller creates a temp folder and stores path in _MEIPASS
        base_path = sys._MEIPASS
    except Exception:
        base_path = os.path.abspath(".")

    return os.path.join(base_path, relative_path)

class Ui_MainWindow(object):
    def searchclicked(self):
        if not self.listWidget.count() == 0:
            self.listWidget.clear()
        if not self.lineEdit.text == '':
            for i in str(self.lineEdit.text()).split(','):
                a = [p for p in glob.glob(self.lineEdit_2.text() + '*' + str(i))if os.path.isfile(p)]
                for f in a:
                    self.listWidget.addItem(f)
                    for pi in range(self.listWidget.count()):
                        item = self.listWidget.item(pi)
                        item.setCheckState(QtCore.Qt.Unchecked)
    def deletefile(self):
        ret = QtWidgets.QMessageBox.information(None, "Check", "Selected items are deleted.\nAre you sure?", QtWidgets.QMessageBox.Yes, QtWidgets.QMessageBox.No)
        if ret == QtWidgets.QMessageBox.Yes:
            for index in range(self.listWidget.count()):
                lol = self.listWidget.item(index)
                if lol.checkState() == QtCore.Qt.Checked:
                    os.remove('./' + str(self.listWidget.item(index).text()))
            if not self.listWidget.count() == 0:
                self.listWidget.clear()
            if not self.lineEdit.text == '':
                for i in str(self.lineEdit.text()).split(','):
                    a = [p for p in glob.glob(self.lineEdit_2.text() + '*' + str(i))if os.path.isfile(p)]
                    for f in a:
                        self.listWidget.addItem(f)
                        for pi in range(self.listWidget.count()):
                            item = self.listWidget.item(pi)
                            item.setCheckState(QtCore.Qt.Unchecked)
    def selectfold(self):
        file = str(QtWidgets.QFileDialog.getExistingDirectory(None, "Select Directory"))
        self.lineEdit_3.setText(file)
        if file is not '':
            os.chdir(file)
    def direndfinish(self):
        if not self.lineEdit_3.text() == "":
            try:
                os.chdir(self.lineEdit_3.text())
            except:
                QtWidgets.QMessageBox.critical(None, "Error", "Typed dirctory does not exiet.", QtWidgets.QMessageBox.Ok)
                self.lineEdit_3.clear()
    def select(self):
         for pi in range(self.listWidget.count()):
            item = self.listWidget.item(pi)
            item.setCheckState(QtCore.Qt.Checked)

    def deselect(self):
         for pi in range(self.listWidget.count()):
            item = self.listWidget.item(pi)
            item.setCheckState(QtCore.Qt.Unchecked)

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setWindowIcon(QtGui.QIcon(res('icon.png')))
        MainWindow.resize(825, 384)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.gridLayout.addWidget(self.lineEdit_3, 0, 0, 1, 6)
        self.toolButton = QtWidgets.QToolButton(self.centralwidget)
        self.toolButton.setObjectName("toolButton")
        self.gridLayout.addWidget(self.toolButton, 0, 6, 1, 1)
        self.listWidget = QtWidgets.QListWidget(self.centralwidget)
        self.listWidget.setObjectName("listWidget")
        self.gridLayout.addWidget(self.listWidget, 1, 0, 1, 7)
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setObjectName("lineEdit")
        self.gridLayout.addWidget(self.lineEdit, 2, 0, 1, 1)
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.gridLayout.addWidget(self.lineEdit_2, 2, 1, 1, 1)
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setObjectName("pushButton")
        self.gridLayout.addWidget(self.pushButton, 2, 2, 1, 1)
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setObjectName("pushButton_2")
        self.gridLayout.addWidget(self.pushButton_2, 2, 3, 1, 1)
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setObjectName("pushButton_3")
        self.gridLayout.addWidget(self.pushButton_3, 2, 4, 1, 1)
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setObjectName("pushButton_4")
        self.gridLayout.addWidget(self.pushButton_4, 2, 5, 1, 2)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.pushButton.clicked.connect(self.searchclicked)
        self.pushButton_2.clicked.connect(self.deletefile)
        self.toolButton.clicked.connect(self.selectfold)
        self.lineEdit_3.editingFinished.connect(self.direndfinish)
        self.pushButton_3.clicked.connect(self.select)
        self.pushButton_4.clicked.connect(self.deselect)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Installer Deleter"))
        self.lineEdit_3.setPlaceholderText(_translate("MainWindow", "Download Folder..."))
        self.toolButton.setText(_translate("MainWindow", "..."))
        self.lineEdit.setPlaceholderText(_translate("MainWindow", "File extention Split ,"))
        self.lineEdit_2.setPlaceholderText(_translate("MainWindow", "File name(optional)"))
        self.pushButton.setText(_translate("MainWindow", "Search"))
        self.pushButton_2.setText(_translate("MainWindow", "Delete"))
        self.pushButton_3.setText(_translate("MainWindow", "Select all"))
        self.pushButton_4.setText(_translate("MainWindow", "Deselect all"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
